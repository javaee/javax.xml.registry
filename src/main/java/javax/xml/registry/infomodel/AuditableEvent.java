/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright (c) 2007-2018 Oracle and/or its affiliates. All rights reserved.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common Development
 * and Distribution License("CDDL") (collectively, the "License").  You
 * may not use this file except in compliance with the License.  You can
 * obtain a copy of the License at
 * https://oss.oracle.com/licenses/CDDL+GPL-1.1
 * or LICENSE.txt.  See the License for the specific
 * language governing permissions and limitations under the License.
 *
 * When distributing the software, include this License Header Notice in each
 * file and include the License file at LICENSE.txt.
 *
 * GPL Classpath Exception:
 * Oracle designates this particular file as subject to the "Classpath"
 * exception as provided by Oracle in the GPL Version 2 section of the License
 * file that accompanied this code.
 *
 * Modifications:
 * If applicable, add the following below the License Header, with the fields
 * enclosed by brackets [] replaced by your own identifying information:
 * "Portions Copyright [year] [name of copyright owner]"
 *
 * Contributor(s):
 * If you wish your version of this file to be governed by only the CDDL or
 * only the GPL Version 2, indicate your decision by adding "[Contributor]
 * elects to include this software in this distribution under the [CDDL or GPL
 * Version 2] license."  If you don't indicate a single choice of license, a
 * recipient has the option to distribute your version of this file under
 * either the CDDL, the GPL Version 2 or to extend the choice of license to
 * its licensees as provided above.  However, if you add GPL Version 2 code
 * and therefore, elected the GPL Version 2 license, then the option applies
 * only if the new code is made subject to such option by the copyright
 * holder.
 */

package javax.xml.registry.infomodel;

import java.util.*;
import java.sql.Timestamp;
import javax.xml.registry.*;

/**
 * AuditableEvent instances provide a long term record of events that effect a 
 * change of state in a RegistryObject. Such events are usually a result of a 
 * client initiated request. AuditableEvent instances are generated by the 
 * registry service to log such events.
 * <p>
 * Often such events effect a change in the life cycle of a RegistryObject. 
 * For example a client request could Create, Update, Deprecate or Delete a 
 * RegistryObject. No AuditableEvent is created for requests that do not alter
 * the state of a RegistryObject. Specifically, read-only requests do not generate 
 * an AuditableEvent.  
 * No AuditableEvent is generated for a RegistryObject when it is classified, 
 * assigned to a Package or associated with another Object.
 * <p>
 * A RegistryObject is associated with an ordered Collection of AuditableEvent 
 * instances that provide a complete audit trail for that Object.
 *
 *
 * @see RegistryObject
 * @author Farrukh S. Najmi
 */
public interface AuditableEvent extends RegistryObject {

    /** Gets the User associated with this object.
     *
     * <p><DL><DT><B>Capability Level: 1 </B></DL> 	 
     *
	 * @return the User that sent the request that generated this this AuditableEvent. Must not be null
     * @throws JAXRException	If the JAXR provider encounters an internal error
     *
     * @label requestor
     * @supplierCardinality 1
     * @directed
     * @associates <{User}>
     */
    User getUser() throws JAXRException;

    /** 
	 * Gets the Timestamp for when this event occurred. 
	 *
	 * <p><DL><DT><B>Capability Level: 1 </B></DL> 	 
	 *
	 * @return the timestamp that records the time the event occured
	 * @throws JAXRException	If the JAXR provider encounters an internal error
	 *
	 */
    Timestamp getTimestamp() throws JAXRException;

    /** 
	 * Gets the type of this event.
	 *
	 * <p><DL><DT><B>Capability Level: 1 </B></DL> 	 
	 *
	 * @see AuditableEvent#EVENT_TYPE_CREATED
	 * @return the type of this event
	 * @throws JAXRException	If the JAXR provider encounters an internal error
	 *
	 */
    int getEventType() throws JAXRException;

    /** 
	 * Gets the RegistryObject associated with this AuditableEvent. 
	 *
	 * <p><DL><DT><B>Capability Level: 1 </B></DL> 	 
	 *
	 * @return the RegistryObject that was the focus of this event
	 * @throws JAXRException	If the JAXR provider encounters an internal error
	 *
	 */
    RegistryObject getRegistryObject() throws JAXRException;

	/** An event where a RegistryObject is created. */
	public static final int EVENT_TYPE_CREATED=0;
	
	/** An event where a RegistryObject is deleted. */
	public static final int EVENT_TYPE_DELETED=1;
	
	/** An event where a RegistryObject is deprecated. */	
	public static final int EVENT_TYPE_DEPRECATED=2;

	/** An event where a RegistryObject is updated. */
	public static final int EVENT_TYPE_UPDATED=3;

	/** An event where a RegistryObject is versioned. */
	public static final int EVENT_TYPE_VERSIONED=4;
	
	/** An event where a RegistryObject is undeprecated. */	
	public static final int EVENT_TYPE_UNDEPRECATED=5;

}
